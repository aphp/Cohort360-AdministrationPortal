image: $IMAGE_REPOSITORY_URL/node:$CI_COMMIT_BRANCH

default:
  tags:
    - $GITLAB_RUNNER_TAG

.default_rules:
  rules:
    - if: ($CI_COMMIT_BRANCH =~ /${STANDARD_CD_BRANCHES}/ || $CI_COMMIT_BRANCH =~ /${PROTECTED_CD_BRANCHES}/) && $ONLY_RELEASE == null
    - when: never

.release_rules:
  rules:
    - if: ($CI_COMMIT_BRANCH =~ /${STANDARD_CD_BRANCHES}/) && $ENABLE_RELEASE == "true"
    - if: ($CI_COMMIT_BRANCH =~ /${$PROTECTED_CD_BRANCHES}/) && $ENABLE_RELEASE == "true"
      when: manual
    - when: never

cache:
  key: "$CI_PIPELINE_ID-$CI_COMMIT_REF_SLUG"
  paths:
    - build/*

variables:
  REACT_APP_BACK_API_URL: /api/back

stages:
  - build
  - test
  - deploy
  - release

build:
  stage: build
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  script:
    - echo $STANDARD_CD_BRANCHES
    - echo $PROTECTED_CD_BRANCHES
    - npm install
    - npm audit fix
    - CI=false npm run build
  rules:
    - !reference [.default_rules, rules]

test:
  stage: test
  script:
    - echo "Testing the code"
#    -
  rules:
    - !reference [.default_rules, rules]

deploy:
  image :
    name : $IMAGE_REPOSITORY_URL/kaniko-executor:$CI_COMMIT_BRANCH
    entrypoint : [ "" ]
  stage: deploy
  needs:
    - job: test
    - job: build
      artifacts: true
  script:
    - sh .gitlab/deployment.sh
  rules:
    - !reference [.default_rules, rules]

release:
  image:
    name: $IMAGE_REPOSITORY_URL/alpine:$CI_COMMIT_BRANCH
    entrypoint: [ "" ]
  stage: release
  script:
    - bash .gitlab/release.sh
  rules:
    - !reference [.release_rules, rules]
